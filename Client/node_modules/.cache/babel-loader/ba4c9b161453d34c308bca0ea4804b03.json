{"ast":null,"code":"var _jsxFileName = \"/Users/joehaefling/mod5/nine2five/src/App/App.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport useApp from '../App/UseApp'; // import JobsContainer from '../JobsContainer/JobsContainer'\n// import StartJob from '../StartJob/StartJob'\n// import RateBusiness from '../RateBusiness/RateBusiness'\n// import Options from '../Options/Options'\n// import Header from '../Header/Header'\n// import CompletedJobs from '../CompletedJobs/CompletedJobs'\n// import Favorites from '../Favorites/Favorites'\n\nfunction App() {\n  const [availableJobsList, setAvailableJobsList] = useState([]);\n  const [currentJob, setCurrentJob] = useState({});\n  const [completedJobs, setCompletedJobs] = useState([]);\n  const [currentBusinessList, setBusinessList] = useState([]);\n  const [currentUsersJobs, setCurrentUsersJobs] = useState([]);\n  const [endTime, setEndTime] = useState('');\n  const [favoriteJobs, setFavoriteJobs] = useState([]);\n  const [isOnHomePage, setIsOnHomePage] = useState(true);\n  const [jobIsComplete, setJobIsComplete] = useState(false);\n  const [jobIsStarted, setJobIsStarted] = useState(false);\n  const [startTime, setStartTime] = useState('');\n  const [userId, setUseId] = useState(3);\n  const {\n    businessList,\n    availableJobs\n  } = useApp(availableJobsList) || {\n    businessList: currentBusinessList,\n    availableJobs: availableJobsList\n  };\n\n  const findJob = jobId => {\n    return favoriteJobs.find(job => job.jobId === jobId);\n  };\n\n  const removeFromFavorites = event => {\n    const removeId = event.target.name;\n    const jobToRemove = findJob(removeId);\n    const newFavsArray = favoriteJobs.filter(job => job.jobId !== jobToRemove.jobId);\n    setFavoriteJobs(newFavsArray);\n  };\n\n  const mainPage = /*#__PURE__*/React.createElement(\"section\", {\n    \"data-testid\": \"App\",\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    \"data-testid\": \"main-page\",\n    className: \"main-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    \"data-testid\": \"user-info-section\",\n    className: \"userInfo-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"user-greeting\",\n    className: \"user-greeting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Welcome Back, Michael!\"))));\n  useEffect(() => {\n    setBusinessList(businessList);\n    setAvailableJobsList(availableJobs);\n  });\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/Favorite-Jobs\",\n    render: routeProps => {\n      const {\n        params\n      } = routeProps.match;\n      const {\n        id\n      } = params;\n      return /*#__PURE__*/React.createElement(\"section\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/Completed-Jobs\",\n    render: routeProps => {\n      const {\n        params\n      } = routeProps.match;\n      const {\n        id\n      } = params;\n      return /*#__PURE__*/React.createElement(\"section\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/Options\",\n    render: routeProps => {\n      const {\n        params\n      } = routeProps.match;\n      const {\n        id\n      } = params;\n      return /*#__PURE__*/React.createElement(\"section\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/RateBusiness\",\n    render: routeProps => {\n      const {\n        params\n      } = routeProps.match;\n      const {\n        id\n      } = params;\n      return /*#__PURE__*/React.createElement(\"section\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }, \"availableJobsList=\", availableJobsList, \"completedJobs=\", completedJobs, \"currentJob=\", currentJob, \"favoriteJobs=\", favoriteJobs, \"jobIsStarted=\", jobIsStarted, \"setAvailableJobs=\", setAvailableJobsList, \"setCompletedJobs=\", setCompletedJobs, \"setCurrentJob=\", setCurrentJob, \"setFavoriteJobs=\", setFavoriteJobs, \"setJobIsStarted=\", setJobIsStarted, \"/>\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:currentJob\",\n    render: routeProps => {\n      const {\n        params\n      } = routeProps.match;\n      const {\n        id\n      } = params;\n      return /*#__PURE__*/React.createElement(\"section\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        isOnHomePage: isOnHomePage,\n        setIsOnHomePage: setIsOnHomePage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(StartJob, Object.assign({}, routeProps, {\n        jobInfo: currentJob,\n        setCurrentJob: setCurrentJob,\n        jobIsStarted: jobIsStarted,\n        setJobIsStarted: setJobIsStarted,\n        setJobIsComplete: setJobIsComplete,\n        setStartTime: setStartTime,\n        setEndTime: setEndTime,\n        avavialbleJobsList: availableJobsList,\n        setAvailableJobsList: setAvailableJobsList,\n        setStartTime: setStartTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }\n      })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => {\n      return /*#__PURE__*/React.createElement(\"section\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        isOnHomePage: isOnHomePage,\n        setIsOnHomePage: setIsOnHomePage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }\n      }), mainPage);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/joehaefling/mod5/nine2five/src/App/App.tsx"],"names":["React","useState","useEffect","Switch","Route","useApp","App","availableJobsList","setAvailableJobsList","currentJob","setCurrentJob","completedJobs","setCompletedJobs","currentBusinessList","setBusinessList","currentUsersJobs","setCurrentUsersJobs","endTime","setEndTime","favoriteJobs","setFavoriteJobs","isOnHomePage","setIsOnHomePage","jobIsComplete","setJobIsComplete","jobIsStarted","setJobIsStarted","startTime","setStartTime","userId","setUseId","businessList","availableJobs","findJob","jobId","find","job","removeFromFavorites","event","removeId","target","name","jobToRemove","newFavsArray","filter","mainPage","routeProps","params","match","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport { Switch, Route, withRouter, Link } from 'react-router-dom'\nimport moment from 'moment';\nimport useApp from '../App/UseApp'\n// import JobsContainer from '../JobsContainer/JobsContainer'\n// import StartJob from '../StartJob/StartJob'\n// import RateBusiness from '../RateBusiness/RateBusiness'\n// import Options from '../Options/Options'\n// import Header from '../Header/Header'\n// import CompletedJobs from '../CompletedJobs/CompletedJobs'\n// import Favorites from '../Favorites/Favorites'\n\n\n\nfunction App() {\n  const [ availableJobsList, setAvailableJobsList ] = useState([])\n  const [ currentJob, setCurrentJob ] = useState({})\n  const [ completedJobs, setCompletedJobs ] = useState([])\n  const [ currentBusinessList, setBusinessList ] = useState([])\n  const [ currentUsersJobs, setCurrentUsersJobs ] = useState([])\n  const [ endTime, setEndTime ] = useState('')\n  const [ favoriteJobs, setFavoriteJobs ] = useState([])\n  const [ isOnHomePage, setIsOnHomePage ] = useState(true)\n  const [ jobIsComplete, setJobIsComplete ] = useState(false)\n  const [ jobIsStarted, setJobIsStarted ] = useState(false)\n  const [ startTime, setStartTime ] = useState('')\n  const [ userId, setUseId ] = useState(3)\n  const { businessList, availableJobs } = useApp(availableJobsList) || {businessList: currentBusinessList, availableJobs: availableJobsList}\n  const findJob = (jobId) => {\n    return favoriteJobs.find(job => job.jobId === jobId)\n  }\n  const removeFromFavorites = (event) => {\n    const removeId = event.target.name\n    const jobToRemove = findJob(removeId)\n    const newFavsArray = favoriteJobs.filter(job => job.jobId !== jobToRemove.jobId)\n    setFavoriteJobs(newFavsArray)\n\n  }\n  const mainPage = (\n    <section data-testid=\"App\" className=\"App\">\n      <main data-testid=\"main-page\" className=\"main-page\">\n        <section data-testid=\"user-info-section\" className=\"userInfo-section\">\n          <h3 data-testid=\"user-greeting\" className=\"user-greeting\">Welcome Back, Michael!</h3>\n        </section>\n        {/* <JobsContainer\n          currentUser={ userId }\n          currentUsersJobs={ currentUsersJobs }\n          favoriteJobs={ favoriteJobs }\n          findJob={ findJob }\n          jobs={ availableJobsList }\n          removeFromFavorites={ removeFromFavorites }\n          setCurrentJob={ setCurrentJob }\n          setCurrentUsersJobs={setCurrentUsersJobs}\n          setFavoriteJobs={ setFavoriteJobs }\n        /> */}\n      </main>\n    </section>\n  )\n\n  useEffect(() => {\n    setBusinessList(businessList)\n    setAvailableJobsList(availableJobs)\n  })\n\n  \n  return (\n    <Switch>\n    <Route\n      exact path=\"/Favorite-Jobs\"\n      render={(routeProps) => {\n        const { params } = routeProps.match\n        const { id } = params\n        return (\n          <section>\n            {/* <Header isOnHomePage={ isOnHomePage } setIsOnHomePage={ setIsOnHomePage } /> */}\n            {/* <Favorites favoriteJobs={ favoriteJobs }/> */}\n          </section>\n        )\n      }}\n    />\n\n    <Route\n      exact path=\"/Completed-Jobs\"\n      render={(routeProps) => {\n        const { params } = routeProps.match\n        const { id } = params\n        return (\n          <section>\n            {/* <Header isOnHomePage={ isOnHomePage } setIsOnHomePage={ setIsOnHomePage } /> */}\n            {/* <CompletedJobs completedJobs={ completedJobs }/> */}\n          </section>\n        )\n      }}\n    />\n    <Route\n      exact path=\"/Options\"\n      render={(routeProps) => {\n        const { params } = routeProps.match\n        const { id } = params\n        return (\n          <section>\n            {/* <Header isOnHomePage={ isOnHomePage } setIsOnHomePage={ setIsOnHomePage } /> */}\n            {/* <Options /> */}\n          </section>\n        )\n      }}\n    />\n    <Route\n      exact path=\"/RateBusiness\"\n      render={(routeProps) => {\n        const { params } = routeProps.match\n        const { id } = params\n        return (\n          <section>\n          {/* <Header isOnHomePage={ isOnHomePage } setIsOnHomePage={ setIsOnHomePage } /> */}\n          {/* <RateBusiness */}\n            availableJobsList={ availableJobsList }\n            completedJobs={ completedJobs }\n            currentJob={ currentJob }\n            favoriteJobs={ favoriteJobs }\n            jobIsStarted={ jobIsStarted }\n            setAvailableJobs={ setAvailableJobsList }\n            setCompletedJobs={ setCompletedJobs }\n            setCurrentJob={ setCurrentJob }\n            setFavoriteJobs={ setFavoriteJobs }\n            setJobIsStarted={ setJobIsStarted }\n          />\n          </section>\n        )\n      }}\n    />\n    <Route\n      exact path=\"/:currentJob\"\n      render={(routeProps) => {\n        const { params } = routeProps.match\n        const { id } = params\n        return (\n          <section>\n          <Header isOnHomePage={ isOnHomePage } setIsOnHomePage={ setIsOnHomePage } />\n          <StartJob\n          \n            {...routeProps}\n            jobInfo={ currentJob }\n            setCurrentJob={ setCurrentJob }\n            jobIsStarted={ jobIsStarted }\n            setJobIsStarted={ setJobIsStarted }\n            setJobIsComplete={ setJobIsComplete }\n            setStartTime={ setStartTime }\n            setEndTime={ setEndTime }\n            avavialbleJobsList={ availableJobsList }\n            setAvailableJobsList={ setAvailableJobsList }\n            setStartTime={ setStartTime }\n          />\n          </section>\n        )\n      }}\n    />\n      <Route exact path=\"/\" render={() => {\n        return (\n        <section>\n          <Header isOnHomePage={ isOnHomePage } setIsOnHomePage={ setIsOnHomePage } />\n          {mainPage}\n        </section>\n      )\n\n      }} />\n    </Switch>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}